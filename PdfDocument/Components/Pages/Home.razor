@page "/"
@using Microsoft.Maui.Storage
@inject IJSRuntime JS
@inject NavigationManager Navigation

<h3 class="mt-3">📄 My Scans</h3>

<div class="container">
    @if (pdfHistory.Count == 0)
    {
            <p>No PDF history available.</p>
    }
    else
    {
        @foreach (var pdf in pdfHistory.OrderByDescending(p => p.CreatedOn))
        {
                    <div class="card mb-3 shadow-sm">
                        <div class="d-flex">
                            
                <img src="data:image/png;base64,@pdf.ThumbnailBase64" style="width:100px; height:auto;" class="m-2 rounded border" />

                            <div class="flex-grow-1 p-2">
                                <h6 class="mb-1">@pdf.Title</h6>
                                <p class="text-muted small">@pdf.CreatedOn.ToString("dd/MM/yy")</p>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-sm btn-secondary" @onclick="@(() => SharePdf(pdf.Path))">Share</button>
                                    <button class="btn btn-sm btn-info" @onclick="@(() => EditPdf(pdf.Path))">Edit</button>
                                </div>
                            </div>
                        </div>
                    </div>
        }
    }
</div>

<!-- Floating Camera/Gallery FAB -->
<div style="position: fixed; bottom: 20px; right: 20px; z-index: 999;">
    <div style="
        background-color: #007bff;
        border-radius: 30px;
        padding: 10px 16px;
        display: flex;
        gap: 16px;
        align-items: center;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        ">
        <!-- Camera Button -->
        <button class="btn btn-link p-0 m-0 text-white" @onclick="CaptureFromCamera" title="Capture from Camera">
            <i class="bi bi-camera-fill fs-4"></i>
        </button>

        <!-- Gallery Button -->
        <button class="btn btn-link p-0 m-0 text-white" @onclick="PickFromGallery" title="Pick from Gallery">
            <i class="bi bi-image-fill fs-4"></i>
        </button>
    </div>
</div>

@code {
    public class PdfInfo
    {
        public string Title { get; set; }
        public string Path { get; set; }
        public DateTime CreatedOn { get; set; }
        public string ThumbnailBase64 { get; set; }
    }

    private List<PdfInfo> pdfHistory = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var files = Directory.GetFiles(FileSystem.AppDataDirectory, "*.pdf");

            string thumbnailBase64 = await JS.InvokeAsync<string>("getBase64FromImageUrl", "2222.png");

            foreach (var file in files)
            {
                pdfHistory.Add(new PdfInfo
                    {
                        Title = Path.GetFileNameWithoutExtension(file),
                        Path = file,
                        CreatedOn = File.GetCreationTime(file),
                        ThumbnailBase64 = thumbnailBase64
                    });DFGH
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error loading PDFs: {ex.Message}");
        }
    }


    // private string GenerateFakeThumbnail()
    // {
    //     return "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVQIW2NgYGD4DwABBAEAfk5eRQAAAABJRU5ErkJggg==";
    // }


    private async Task SharePdf(string filePath)
    {
        await Share.RequestAsync(new ShareFileRequest
            {
                Title = "Share PDF",
                File = new ShareFile(filePath)
            });
    }

    private Task EditPdf(string path)
    {
        var encodedPath = Uri.EscapeDataString(path);
        // Navigation.NavigateTo($"/editpdf?file={encodedPath}");
        return Task.CompletedTask;
    }


    private async Task CaptureFromCamera()
    {
        // await JS.InvokeVoidAsync("alert", "Camera clicked");
        // Navigate to your scan camera page
        Navigation.NavigateTo("/scantopdf");
    }

    private async Task PickFromGallery()
    {
        // await JS.InvokeVoidAsync("alert", "Gallery clicked");
        // Navigate to gallery image-to-PDF page
        Navigation.NavigateTo("/gallerytopdf");
    }
}
